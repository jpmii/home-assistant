#
# Kids TV Outlet
#

# - alias: Kids TV off
  # trigger:
    # - platform: time
      # at: '19:30:00'
  # condition:
    # - condition: state
      # entity_id: input_boolean.vacation_mode
      # state: 'off'
  # action:
    # - service: switch.turn_off
      # entity_id: switch.basement_christmas_plug
# - alias: Kids TV On
  # trigger:
    # - platform: time
      # at: '07:00:00'
  # condition:
    # - condition: state
      # entity_id: input_boolean.vacation_mode
      # state: 'off'
  # action:
    # - service: switch.turn_on
      # entity_id: switch.basement_christmas_plug

#
# Kids Light
#

- alias: Kids Light ready to go for tomorrow
  trigger:
    - platform: time
      at: '14:30:00'
  condition:
    - condition: state
      entity_id: input_boolean.vacation_mode
      state: 'off'
  action:
    - service: input_datetime.set_datetime
      data_template:
        entity_id: input_datetime.kids_light
        time: '{% if is_state("sensor.school_day_off_tomorrow", "False") %}06:30:00{% else %}07:30:00{% endif %}'
- alias: Kids Light ready to go for the day (dynamic time)
  trigger:
    - platform: time
      at: input_datetime.kids_light
  condition:
    - condition: state
      entity_id: input_boolean.vacation_mode
      state: 'off'
  action:
    - service: lifx.set_state
      data_template:
        entity_id:
         - light.kids_light
        power: True
        brightness: 100
        rgb_color: ["{{range(256)|random}}","{{range(256)|random}}","{{range(256)|random}}"]
        transition: 15
- alias: Kids Light back to normal
  trigger:
    - platform: template
      value_template: >
        {{ as_timestamp(now()) | timestamp_custom('%X', True) == (((state_attr('input_datetime.kids_light' , 'timestamp')) + (15 * 60))|timestamp_custom('%H:%M:%S', false)) }}
  condition:
    - condition: state
      entity_id: input_boolean.vacation_mode
      state: 'off'
  action:
    - service: lifx.set_state
      data:
        entity_id:
         - light.kids_light
        brightness: 255
        rgb_color: ["255","255","255"]
        transition: 15
# {{ as_timestamp(states('sensor.date_time').replace(',', '')) == ( state_attr('input_datetime.kids_light', 'timestamp') + 2700 ) }}
- alias: Kids Light turn off
  trigger:
  - platform: template
    value_template: >
      {{ as_timestamp(now()) | timestamp_custom('%X', True) == (((state_attr('input_datetime.kids_light' , 'timestamp')) + (45 * 60))|timestamp_custom('%H:%M:%S', false)) }}
  condition:
    - condition: state
      entity_id: input_boolean.vacation_mode
      state: 'off'
  action:
    - service: lifx.set_state
      data:
        entity_id:
         - light.kids_light
        transition: 15
        power: false
- alias: Kids Light wind down for bed
  trigger:
    - platform: time
      at: '18:30:00'
  condition:
    - condition: state
      entity_id: input_boolean.vacation_mode
      state: 'off'
  action:
    - service: lifx.set_state
      data:
        entity_id:
         - light.kids_light
        power: True
        brightness: 25
        rgb_color: [255,255,255]
        transition: 15
- alias: Kids Light warning for bed
  trigger:
    - platform: time
      at: '20:30:00'
  condition:
    - condition: state
      entity_id: input_boolean.vacation_mode
      state: 'off'
  action:
    - service: lifx.effect_pulse
      data:
        entity_id:
         - light.kids_light
        color_name: yellow
        period: 5
        cycles: 3
        mode: breathe
        power_on: false
- alias: Kids Light ready for bed
  trigger:
    - platform: time
      at: '19:20:00'
  condition:
    - condition: state
      entity_id: input_boolean.vacation_mode
      state: 'off'
  action:
    - service: lifx.set_state
      data:
        entity_id:
         - light.kids_light
        power: True
        brightness: 5
        rgb_color: [255,255,255]
        transition: 15
- id: kids_light_off_time
  alias: "Kids Light off at 9pm"
  trigger:
    - platform: time
      at: '21:00:00'
  condition:
    - condition: time
      weekday:
        - mon
        - tue
        - wed
        - thu
        - sun
  action:
    service: light.turn_off
    entity_id: light.kids_light
- id: kids_light_off_time_weekend
  alias: "Kids Light off at 10pm"
  trigger:
    - platform: time
      at: '22:00:00'
  condition:
    - condition: time
      weekday:
        - sat
        - fri
  action:
    service: light.turn_off
    entity_id: light.kids_light

#
# Kids Door Opened
#

- alias: Front Bedroom door opened overnight
  trigger:
    platform: state
    entity_id: binary_sensor.front_bedroom_door_contact
    to: 'on'
  condition:
    condition: or
    conditions:
      - condition: time
        after: '21:00:00'
      - condition: sun
        before: sunrise
  action:
    - service: switch.turn_on
      entity_id: switch.kids_bathroom_fan
    - service: light.turn_on
      entity_id: light.kids_light
- alias: Front Bedroom door closed overnight (30 seconds)
  trigger:
    platform: state
    entity_id: binary_sensor.front_bedroom_door_contact
    to: 'off'
    for:
      seconds: 30
  condition:
    condition: or
    conditions:
      - condition: time
        after: '21:00:00'
      - condition: sun
        before: sunrise
  action:
    - service: switch.turn_off
      entity_id: switch.kids_bathroom_fan
- alias: Front Bedroom door closed overnight (3 minutes)
  trigger:
    platform: state
    entity_id: binary_sensor.front_bedroom_door_contact
    to: 'off'
    for:
      minutes: 3
  condition:
    condition: or
    conditions:
      - condition: time
        after: '21:00:00'
      - condition: sun
        before: sunrise
  action:
    - service: light.turn_off
      entity_id: light.kids_light
- id: kids_light_off_overnight
  alias: "Kids Light turn off after 5 minutes (Overnight)"
  trigger:
    platform: state
    entity_id: light.stove_light
    to: 'on'
    for:
      minutes: 5
  condition:
    condition: time
    after: '23:00:00'
    before: '06:00:00'
  action:
    - service: light.turn_off
      entity_id: light.stove_light